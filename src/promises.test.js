const getRandomValue = (min = 0, max = 1) => {
  return (
    new Promise((resolve) => {
      const randomInteger = Math.random() * (max-min) + min;
      resolve(randomInteger);
    })
  ) 
};

describe('getRandomValue', () => {
  it('returns a promise of a random integer', () => {
    getRandomValue().then(value => assert.isNumber(value));
  });
});

describe('getFourRandomValues', () => {
  const getFourRandomValues = (min, max) => {
    //creates a new array of length 4 and it "fills" each index with a getRandomValue callback  
    return Promise.all( new Array(4).fill(getRandomValue(min, max)))
    //technically this is returning a promise object but the test was written with a .then()
  };

  it('returns an array of four integers, generated by getRandomValue()', () => {
    getFourRandomValues().then(values => assert.lengthOf(values, 4));
  });
});
